{"version":3,"sources":["Pages/Login/Login.js","Public/Images/AI-Ransbotham-Speed-Artificial-Intelligence-1200.jpg","Pages/Login/Index.js"],"names":["Login","useState","email","val","undefined","valid","password","getValues","setGetValue","show","msg","showMsg","setShowMsg","loading","setLoading","loginRestAPI","useContext","RestAPIContext","dispatch","UsersContextAPI","push","useHistory","loginHandler","a","trim","data","type","LOGIN","console","error","Grid","container","justifyContent","className","item","Card","CardHeader","title","subheader","CardContent","direction","TextField","label","fullWidth","onChange","e","currentTarget","value","length","Typography","children","variant","CardActions","to","Icon","fontSize","align","display","Button","onClick","disabled","Index","src","poster","Divider"],"mappings":"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","file":"static/js/9.4f9aca94.chunk.js","sourcesContent":["import React, {useContext, useState, useReducer} from \"react\";\r\nimport RestAPIContext from \"../../ContextAPI/ContextAPI\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport {MdPersonAdd} from \"react-icons/md\"\r\nimport {AiOutlineMail} from \"react-icons/ai\";\r\nimport {RiLockPasswordLine} from \"react-icons/ri\";\r\nimport {LOGIN} from \"../../Reducers/UsersReducer/UsersTypes\";\r\nimport {useHistory} from \"react-router\";\r\nimport UsersContextAPI from \"./../../ContextAPI/UsersContextAPI\";\r\n\r\nconst Login = () => {\r\n\r\n    const [getValues, setGetValue] = useState({\r\n        email: {val: undefined, valid: undefined},\r\n        password: {val: undefined, valid: undefined}\r\n    });\r\n\r\n    const [showMsg, setShowMsg] = useState({show: false, msg: \"\"});\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const {loginRestAPI} = useContext(RestAPIContext);\r\n\r\n    const {dispatch} = useContext(UsersContextAPI);\r\n\r\n    const {push} = useHistory();\r\n\r\n    // get value of email input\r\n    const getEmailHandler = e => {\r\n        const email = e.currentTarget.value;\r\n\r\n        if (email.length === 0) {\r\n            setGetValue({...getValues, email: {val: undefined, valid: false}});\r\n\r\n            return;\r\n        }\r\n\r\n        setGetValue({...getValues, email: {val: email, valid: true}});\r\n    };\r\n\r\n    // get value of password input\r\n    const getPasswordHandler = e => {\r\n        const password = e.currentTarget.value;\r\n\r\n        if (password.length === 0) {\r\n            setGetValue({...getValues, password: {val: undefined, valid: false}});\r\n\r\n            return;\r\n        }\r\n\r\n        setGetValue({...getValues, password: {val: password, valid: true}});\r\n    };\r\n\r\n    // login handler\r\n    const loginHandler = async () => {\r\n        setLoading(true);\r\n\r\n        // if email or password is incorrect show alert and don't send request to server\r\n        if (!getValues.email.valid || !getValues.password.valid) {\r\n            setShowMsg({show: true, msg: \"E-mail or Password Is Incorrect\"});\r\n\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const {data} = await loginRestAPI({\r\n                email: getValues.email.val.trim(),\r\n                password: getValues.password.val.trim()\r\n            });\r\n            setLoading(false);\r\n\r\n            dispatch({type: LOGIN, data});\r\n\r\n            // send user to users page\r\n            push(\"/dashboard\");\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setShowMsg({show: true, msg: \"E-mail or Password Is Incorrect\"});\r\n            console.error(e);\r\n            // TODO show login error\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Grid container={true} justifyContent=\"center\" className=\"h-100\">\r\n            <Grid item={true} className=\"d-flex flex-column justify-content-center\">\r\n                <Card className=\"border px-5 h-75 d-grid login-card-background\">\r\n                    <CardHeader\r\n                        title=\"Login To System\"\r\n                        subheader=\"System Name\"\r\n                    />\r\n                    <CardContent>\r\n                        <Grid container={true} direction=\"column\">\r\n                            <Grid item={true} className=\"my-3 d-flex align-items-baseline\">\r\n                                <AiOutlineMail className=\"mx-2\"/>\r\n                                <TextField\r\n                                    label=\"E-mail\"\r\n                                    type=\"email\"\r\n                                    fullWidth={true}\r\n                                    onChange={getEmailHandler}\r\n                                    error={getValues.email.valid === false}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item={true} className=\"my-3 d-flex align-items-baseline\">\r\n                                <RiLockPasswordLine className=\"mx-2\"/>\r\n                                <TextField\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    fullWidth={true}\r\n                                    onChange={getPasswordHandler}\r\n                                    error={getValues.password.valid === false}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item={true}>\r\n                                <div className={!showMsg.show ? \"d-none\" : \"alert alert-danger\"}>\r\n                                    <Typography\r\n                                        children={showMsg.msg}\r\n                                        variant=\"subtitle2\"\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Grid container={true} direction=\"column\">\r\n                            <Grid item={true} className=\"py-2 align-self-center\">\r\n                                <Link to=\"\" className=\"text-decoration-none\">\r\n                                    <Icon fontSize=\"small\" className=\"px-2\">\r\n                                        <MdPersonAdd/>\r\n                                    </Icon>\r\n                                    <Typography\r\n                                        children=\"Register\"\r\n                                        align=\"center\"\r\n                                        display=\"inline\"\r\n                                    />\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item={true} className=\"align-self-center py-2\">\r\n                                <Button\r\n                                    onClick={loginHandler}\r\n                                    variant=\"outlined\"\r\n                                    className=\"bg-primary text-white\"\r\n                                    disabled={loading}\r\n                                >\r\n                                    {\r\n                                        !loading ? <Typography\r\n                                                children=\"Login\"\r\n                                                variant=\"button\"\r\n                                                align=\"center\"\r\n                                            />\r\n                                            :\r\n                                            <div className=\"spinner-border\"/>\r\n                                    }\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    </>;\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/AI-Ransbotham-Speed-Artificial-Intelligence-1200.283453ac.jpg\";","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Login from \"./Login\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport poster from \"./../../Public/Images/AI-Ransbotham-Speed-Artificial-Intelligence-1200.jpg\";\r\n\r\nconst Index = () => {\r\n    return <>\r\n        <Grid container={true} className=\"h-100 align-items-center justify-content-center\">\r\n            <Grid item={true} className=\"h-75 w-75 bg-transparency-color rounded rounded-3\">\r\n                <Grid container={true}\r\n                      className=\"h-100 justify-content-center justify-content-lg-between px-lg-2 justify-content-xl-around\">\r\n                    <Grid className=\"d-none d-lg-flex w-50 h-100\">\r\n                        <img src={poster} className=\"py-5 rounded h-100 w-100\"/>\r\n                    </Grid>\r\n                    <Divider variant=\"fullWidth\"/>\r\n                    <Grid>\r\n                        <Login/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </>;\r\n};\r\n\r\nexport default Index;"],"sourceRoot":""}