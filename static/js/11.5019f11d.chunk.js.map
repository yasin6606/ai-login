{"version":3,"sources":["Pages/Users/UserCard.js","Pages/Users/Users.js"],"names":["UserCard","rowData","close","titleHandler","index","Card","CardHeader","avatar","title","action","IconButton","subheader","moment","format","Divider","className","variant","CardContent","Grid","container","direction","map","x","i","userData","item","Typography","children","CardActions","Button","color","onClick","Users","useState","columns","options","tableAPIs","setTableAPIs","data","page","per_page","total","users","setUsers","show","content","undefined","dialog","setDialog","fetchUsersListRestAPI","useContext","ContextAPI","fetchData","pageNum","a","tableOptions","count","elevation","filter","rowsPerPage","rowsPerPageOptions","search","onRowClick","closeDialog","onChangePage","currentPageNum","useEffect","name","label","sort","customBodyRender","value","Avatar","src","Dialog","open","onClose","fullWidth","classes","paper","DialogContent"],"mappings":"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","file":"static/js/11.5019f11d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {BsThreeDotsVertical} from \"react-icons/bs\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport moment from \"moment/moment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst UserCard = ({rowData, close}) => {\r\n\r\n    // return appropriate key for user's info\r\n    const titleHandler = index => {\r\n        switch (index) {\r\n            case 1:\r\n                return \"First Name: \";\r\n            case 2:\r\n                return \"Last Name: \";\r\n            case 3:\r\n                return \"E-mail: \";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    // each row of user's data\r\n    const contentRows = (userData, index) => {\r\n        if (index === 0)\r\n            return null;\r\n\r\n        return <Grid key={userData} item={true} className=\"d-flex my-1 my-md-3 p-md-2\">\r\n            <div className=\"col col-6\">\r\n                <Typography\r\n                    children={titleHandler(index)}\r\n                    className=\"fw-bold\"\r\n                />\r\n            </div>\r\n            <div className=\"col col-6\">\r\n                <Typography\r\n                    children={rowData[index]}\r\n                />\r\n            </div>\r\n        </Grid>;\r\n    };\r\n\r\n    return <>\r\n        <Card>\r\n            <CardHeader\r\n                avatar={rowData[0]}\r\n                title={rowData[1]}\r\n                action={\r\n                    <IconButton>\r\n                        <BsThreeDotsVertical title=\"Edit\"/>\r\n                    </IconButton>\r\n                }\r\n                subheader={moment().format(\"YYYY MMM DD \")}\r\n            />\r\n            <Divider className=\"bg-primary\" variant=\"middle\"/>\r\n            <CardContent>\r\n                <Grid container={true} direction=\"column\">\r\n                    {rowData.map((x, i) => contentRows(x, i))}\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider className=\"bg-primary\" variant=\"middle\"/>\r\n            <CardActions>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={close}>\r\n                    <Typography\r\n                        children=\"Close\"\r\n                        variant=\"button\"\r\n                    />\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    </>;\r\n};\r\n\r\nexport default UserCard;\r\n\r\n\r\n// <Grid item={true} className=\"d-flex my-1 my-md-3 p-md-2\">\r\n//     <div className=\"col col-6\">\r\n//         <Typography\r\n//             children=\"First Name: \"\r\n//             className=\"fw-bold\"\r\n//         />\r\n//     </div>\r\n//     <div className=\"col col-6\">\r\n//         <Typography\r\n//             children={rowData[1]}\r\n//         />\r\n//     </div>\r\n// </Grid>\r\n// <Grid item={true} className=\"d-flex my-1 my-md-3 p-md-2\">\r\n//     <div className=\"col col-6\">\r\n//         <Typography\r\n//             children=\"Last Name: \"\r\n//             className=\"fw-bold\"\r\n//         />\r\n//     </div>\r\n//     <div className=\"col col-6\">\r\n//         <Typography\r\n//             children={rowData[2]}\r\n//         />\r\n//     </div>\r\n// </Grid>\r\n// <Grid item={true} className=\"d-flex my-1 my-md-3 p-md-2\">\r\n//     <div className=\"col col-6\">\r\n//         <Typography\r\n//             children=\"E-mail: \"\r\n//             className=\"fw-bold\"\r\n//         />\r\n//     </div>\r\n//     <div className=\"col col-6\">\r\n//         <Typography\r\n//             children={rowData[3]}\r\n//         />\r\n//     </div>\r\n// </Grid>","import React, {useEffect, useState, useContext} from \"react\";\r\nimport ContextAPI from \"../../ContextAPI/ContextAPI\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MUIDataTables from \"mui-datatables\";\r\nimport {Avatar, DialogContent} from \"@material-ui/core\";\r\nimport UserCard from \"./UserCard\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst Users = () => {\r\n\r\n    const [tableAPIs, setTableAPIs] = useState({\r\n        columns: [],\r\n        options: {}\r\n    });\r\n    const [users, setUsers] = useState({\r\n        data: [],\r\n        page: 0,\r\n        per_page: 6,\r\n        total: 12\r\n    });\r\n    const [dialog, setDialog] = useState({show: false, content: undefined});\r\n\r\n    const {fetchUsersListRestAPI} = useContext(ContextAPI);\r\n\r\n    // fetch users data from server\r\n    const fetchData = (pageNum = 1) => {\r\n        (\r\n            async () => {\r\n                const {data} = await fetchUsersListRestAPI(pageNum);\r\n\r\n                setUsers({...users, data: [...users.data, ...data.data], page: --data.page});\r\n            }\r\n        )();\r\n    };\r\n\r\n    const tableOptions = {\r\n        count: users.total,\r\n        elevation: 24,\r\n        filter: false,\r\n        page: users.page,\r\n        rowsPerPage: users.per_page,\r\n        rowsPerPageOptions: [2, 4, 6],\r\n        search: false,\r\n        onRowClick: rowData => {\r\n            setDialog({show: !dialog.show, content: <UserCard rowData={rowData} close={closeDialog}/>});\r\n        },\r\n        onChangePage: currentPageNum => {\r\n            fetchData(++currentPageNum);\r\n        }\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setDialog({show: false, content: undefined});\r\n    };\r\n\r\n    useEffect(() => {\r\n        const columns = [\r\n            {\r\n                name: \"avatar\",\r\n                label: \"Avatar\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true,\r\n                    customBodyRender: value => {\r\n                        return <Avatar src={value}/>\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                name: \"first_name\",\r\n                label: \"First Name\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n            },\r\n            {\r\n                name: \"last_name\",\r\n                label: \"Last Name\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n            },\r\n            {\r\n                name: \"email\",\r\n                label: \"E-mail\",\r\n                options: {\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n            }\r\n        ];\r\n\r\n        setTableAPIs({columns, options: tableOptions});\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return <>\r\n        <Grid container={true} direction=\"column\" className=\"h-100 align-items-center justify-content-center\">\r\n            <Grid item={true} className=\"w-75 border\">\r\n                <MUIDataTables\r\n                    title=\"List of Users\"\r\n                    columns={tableAPIs.columns}\r\n                    data={users.data}\r\n                    options={tableOptions}\r\n                />\r\n                <Dialog\r\n                    open={dialog.show}\r\n                    onClose={closeDialog}\r\n                    fullWidth={true}\r\n                    classes={{paper: \"bg-transparent\"}}\r\n                >\r\n                    <DialogContent>\r\n                        {dialog.content}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Grid>\r\n        </Grid>\r\n    </>;\r\n};\r\n\r\nexport default Users;"],"sourceRoot":""}